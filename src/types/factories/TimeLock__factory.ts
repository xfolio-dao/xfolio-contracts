/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TimeLock, TimeLockInterface } from "../TimeLock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenContract",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "releaseTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "boxNumber",
        type: "uint256",
      },
    ],
    name: "LogLockBoxDeposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "boxNumber",
        type: "uint256",
      },
    ],
    name: "LogLockBoxWithdrawal",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "releaseTime",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "lockBoxDictionary",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "releaseTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lockBoxNumber",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610ae9380380610ae98339818101604052810190610032919061008d565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506100ff565b600081519050610087816100e8565b92915050565b60006020828403121561009f57600080fd5b60006100ad84828501610078565b91505092915050565b60006100c1826100c8565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6100f1816100b6565b81146100fc57600080fd5b50565b6109db8061010e6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630efe6a8b146100515780632e1a7d4d146100815780633327b875146100b1578063fc0c546a146100e2575b600080fd5b61006b600480360381019061006691906105c8565b610100565b60405161007891906107b2565b60405180910390f35b61009b60048036038101906100969190610640565b6102ee565b6040516100a891906107b2565b60405180910390f35b6100cb60048036038101906100c6919061058c565b6104ce565b6040516100d9929190610808565b60405180910390f35b6100ea61050f565b6040516100f791906107cd565b60405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401610160939291906106c8565b602060405180830381600087803b15801561017a57600080fd5b505af115801561018e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b29190610617565b6101bb57600080fd5b6101c3610533565b8381600001818152505082816020018181525050600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050600190039060005260206000209060020201600090919091909150600082015181600001556020820151816001015550507f385d959df1f3aa94692f1433b742f8280a346147f2a575ea1b1b9a426e73fc4d3386868660018060008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506102c99190610842565b6040516102da9594939291906106ff565b60405180910390a160019150509392505050565b600080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110610368577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000209060020201905042816001015411156103bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b6906107e8565b60405180910390fd5b600081600001549050600082600001819055507f32163c309eac19998a89fe05848d751cb26c4c3f537555b2fe2f6e85e98899843382866040516104059392919061077b565b60405180910390a160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610468929190610752565b602060405180830381600087803b15801561048257600080fd5b505af1158015610496573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ba9190610617565b6104c357600080fd5b600192505050919050565b600160205281600052604060002081815481106104ea57600080fd5b9060005260206000209060020201600091509150508060000154908060010154905082565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b604051806040016040528060008152602001600081525090565b60008135905061055c81610960565b92915050565b60008151905061057181610977565b92915050565b6000813590506105868161098e565b92915050565b6000806040838503121561059f57600080fd5b60006105ad8582860161054d565b92505060206105be85828601610577565b9150509250929050565b6000806000606084860312156105dd57600080fd5b60006105eb8682870161054d565b93505060206105fc86828701610577565b925050604061060d86828701610577565b9150509250925092565b60006020828403121561062957600080fd5b600061063784828501610562565b91505092915050565b60006020828403121561065257600080fd5b600061066084828501610577565b91505092915050565b61067281610876565b82525050565b61068181610888565b82525050565b610690816108be565b82525050565b60006106a3602a83610831565b91506106ae82610911565b604082019050919050565b6106c2816108b4565b82525050565b60006060820190506106dd6000830186610669565b6106ea6020830185610669565b6106f760408301846106b9565b949350505050565b600060a0820190506107146000830188610669565b6107216020830187610669565b61072e60408301866106b9565b61073b60608301856106b9565b61074860808301846106b9565b9695505050505050565b60006040820190506107676000830185610669565b61077460208301846106b9565b9392505050565b60006060820190506107906000830186610669565b61079d60208301856106b9565b6107aa60408301846106b9565b949350505050565b60006020820190506107c76000830184610678565b92915050565b60006020820190506107e26000830184610687565b92915050565b6000602082019050818103600083015261080181610696565b9050919050565b600060408201905061081d60008301856106b9565b61082a60208301846106b9565b9392505050565b600082825260208201905092915050565b600061084d826108b4565b9150610858836108b4565b92508282101561086b5761086a6108e2565b5b828203905092915050565b600061088182610894565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006108c9826108d0565b9050919050565b60006108db82610894565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f5468697320626f78206973207374696c6c206c6f636b65642c20636f6d65206260008201527f61636b206c617465722100000000000000000000000000000000000000000000602082015250565b61096981610876565b811461097457600080fd5b50565b61098081610888565b811461098b57600080fd5b50565b610997816108b4565b81146109a257600080fd5b5056fea26469706673582212207ae6dc4efe3ca94393f80b1c007abe2bbf37bab91df4e615cec9a9998d51a6e064736f6c63430008040033";

export class TimeLock__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    tokenContract: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TimeLock> {
    return super.deploy(tokenContract, overrides || {}) as Promise<TimeLock>;
  }
  getDeployTransaction(
    tokenContract: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(tokenContract, overrides || {});
  }
  attach(address: string): TimeLock {
    return super.attach(address) as TimeLock;
  }
  connect(signer: Signer): TimeLock__factory {
    return super.connect(signer) as TimeLock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TimeLockInterface {
    return new utils.Interface(_abi) as TimeLockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TimeLock {
    return new Contract(address, _abi, signerOrProvider) as TimeLock;
  }
}
